"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const IconBase_1 = __importDefault(require("../../IconBase"));
const Communication = (_a) => {
    var { primary, customColor, disabled, width = '28px', height = '24px', className } = _a, rest = __rest(_a, ["primary", "customColor", "disabled", "width", "height", "className"]);
    return ((0, jsx_runtime_1.jsx)(IconBase_1.default, Object.assign({ className: `ticons-communication ${className}`, primary: primary, color: customColor, disabled: disabled, height: height, width: width, viewBox: "0 0 28 24" }, rest, { children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("path", { d: "M18.3913 23.9712C19.1443 24.0846 20.515 23.8599 21.0945 23.3655C21.6738 22.8711 22.1178 21.7144 22.1247 20.9528L22.1813 17.2237V17.224C22.1826 16.7309 22.0082 16.2535 21.6896 15.8772C21.371 15.5012 20.2162 15.024 19.7298 14.9441L15.5567 14.2475C14.4489 13.9954 13.6869 14.9704 12.9289 15.6057C12.6705 15.8254 12.3485 15.9571 12.0101 15.9809C11.6716 16.0049 11.3344 15.92 11.0475 15.7388C9.74538 14.8871 8.92333 13.9367 8.08979 12.6227C7.90832 12.3489 7.87194 12.0258 7.88008 11.6973C7.88823 11.3689 7.99706 11.0508 8.19188 10.7863L9.06051 9.62721C9.40399 9.16223 9.53929 8.57553 9.4343 8.00711L8.51881 3.96721C8.42989 3.48933 8.17647 2.84309 7.80269 2.53244C7.42891 2.22179 6.95803 1.94446 6.47198 1.94446H2.76345C2.03417 1.94355 1.11736 2.40648 0.623606 2.94297C0.129663 3.47946 -0.00912085 4.36255 0.051932 5.08911C0.465691 10.013 2.76345 21.9294 18.3912 23.971L18.3913 23.9712ZM1.8155 3.79524C2.11644 3.46512 2.54316 3.27799 2.99005 3.28026H6.47233H6.18901C6.43836 3.28026 6.73641 3.36737 6.92827 3.52666C7.11993 3.68618 7.19319 3.90747 7.23889 4.15254L7.98452 7.62648C8.03883 7.91815 7.96936 8.21929 7.7931 8.45782L6.69777 10.013C6.37963 10.4452 6.20156 11.1909 6.18798 11.7274C6.1744 12.2639 6.3824 12.9051 6.67813 13.3526C8.50752 15.9099 11.4814 18.9065 13.8114 17.0579L14.8633 16.1657C15.1025 15.9619 15.4197 15.8743 15.7295 15.9268L19.5629 16.6235C19.8124 16.6644 20.0394 16.7929 20.203 16.9859C20.3664 17.179 20.456 17.424 20.4553 17.6204L20.2854 20.8398V20.8396C20.2813 21.3055 20.0752 21.7467 19.7209 22.0488C19.3663 22.3511 18.8984 22.4848 18.4377 22.4153C3.87772 20.0974 1.88913 9.46738 1.51494 5.00485C1.47557 4.56136 1.51257 4.12196 1.81554 3.79567L1.8155 3.79524Z" }), (0, jsx_runtime_1.jsx)("path", { d: "M26.9402 0.00125418H13.4137C13.143 0.00125418 12.8831 0.108446 12.6915 0.299381C12.4998 0.490317 12.3918 0.749501 12.3914 1.01976V10.4803C12.3918 10.7508 12.4996 11.01 12.6912 11.2011C12.8829 11.3923 13.1428 11.4995 13.4137 11.4995H26.9402C27.211 11.4993 27.4704 11.3917 27.6619 11.2007C27.8533 11.0096 27.9611 10.7506 27.9615 10.4803V1.01977C27.9613 0.749491 27.8535 0.490306 27.6621 0.298963C27.4706 0.107819 27.2112 0.000209024 26.9402 0V0.00125418ZM21.0765 6.16404C20.8378 6.40188 20.5142 6.53545 20.177 6.53545C19.8398 6.53545 19.5164 6.40188 19.2778 6.16404L14.5345 1.3189H25.9246L21.0765 6.16404ZM16.8062 5.87764L13.7692 9.22692V2.47872L16.8062 5.87764ZM18.031 6.73346L18.5253 7.22697C18.9636 7.66369 19.5578 7.90887 20.1771 7.90887C20.7964 7.90887 21.3903 7.66372 21.8288 7.22697L22.3232 6.73346L25.5633 10.1805H14.8411L18.031 6.73346ZM23.4944 5.77281L26.7929 2.4263V9.33175L23.4944 5.77281Z" })] }) })));
};
exports.default = Communication;
//# sourceMappingURL=Communication.js.map